name: pixels-test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
  pull_request:
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    - uses: mirromutth/mysql-action@v1.1
      with:
        host port: 3800 # Optional, default value is 3306. The port of host
        container port: 3307 # Optional, default value is 3306. The port of container
        character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
        collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
        mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
        mysql database: 'pixels-metadata' # Optional, default value is "test". The specified database which will be create
        mysql root password: 12345678 # Required if "mysql user" is empty, default is empty. The root superuser password
        mysql user: 'liyu' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
        mysql password: 12345678 # Required if "mysql user" exists. The password for the "mysql user"
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    
    - name: protobuf Installation
      run: sudo apt-get install protobuf-compiler
      
    - name: tbb Installation
      run: sudo apt-get install libtbb-dev
      
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
        
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        
    - name: Download and install pixels
      run: |
        cd extension/pixels
        git clone https://github.com/pixelsdb/pixels.git
        cd pixels
        mvn package install
        
    - name: Download and install pixels-sink
      run: |
        cd extension/pixels
        git clone https://github.com/pixelsdb/pixels-sink.git
        cd pixels-sink
        mvn install
        
    - name: Generate TPCH
      run: |
        git clone https://github.com/electrum/tpch-dbgen.git
        cd tpch-dbgen
        make
        ls
        ./dbgen -vf -s 1
        mkdir -p tpch_data/tpch_1/customer
        mv customer.tbl tpch_data/tpch_1/customer/
        mkdir -p tpch_data/tpch_1/lineitem   
        mv lineitem.tbl tpch_data/tpch_1/lineitem/
        mkdir -p tpch_data/tpch_1/nation
        mv nation.tbl tpch_data/tpch_1/nation/
        mkdir -p tpch_data/tpch_1/orders
        mv orders.tbl tpch_data/tpch_1/orders/
        mkdir -p tpch_data/tpch_1/partsupp
        mv partsupp.tbl tpch_data/tpch_1/partsupp/
        mkdir -p tpch_data/tpch_1/part
        mv part.tbl tpch_data/tpch_1/part/
        mkdir -p tpch_data/tpch_1/region
        mv region.tbl tpch_data/tpch_1/region/
        mkdir -p tpch_data/tpch_1/supplier
        mv supplier.tbl tpch_data/tpch_1/supplier/
        
    - name: Install Duckdb
      run: |
        cat /proc/cpuinfo
        BUILD_BENCHMARK=1 BUILD_TPCH=1 make -j 2
      

        
